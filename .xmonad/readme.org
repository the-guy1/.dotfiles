#+title: XMonad readme and Readme
#+AUTHOR: Kenneth Lawson
#+PROPERTY: header-args :tangle xmonad.hs
#+STARTUP: showeverything


* Table of Contents :TOC:
- [[#about-config][About Config]]
- [[#screen-shots][Screen shots]]
- [[#imports][Imports]]
- [[#variables][Variables]]
- [[#main][MAIN]]

* About Config

* Screen shots

* Imports
These are the Haskell modules that XMonad needs
#+begin_src haskell
-- Base
import XMonad
import System.Directory
import System.IO (hClose, hPutStr, hPutStrLn)
import System.Exit (exitSuccess)
import qualified XMonad.StackSet as W

--Utils
import XMonad.Util.SpawnOnce
import XMonad.Util.EZConfig (additionalKeysP, mkNamedKeymap)
#+end_src

* Variables
variables that will be used for the rest of the configuration file
#+begin_src haskell
--myFont :: String
--myFont = "xft:FiraCode Nerd Font Mono:regular:size=9:antialias=true:hinting=true"

myModMask :: KeyMask
myModMask = mod4Mask        -- Sets modkey to super/windows key

myTerminal :: String
myTerminal = "alacritty"    -- Sets default terminal

--myBrowser :: String
--mybrowser = "qutebrowser"  -- Sets qutebrowser as browser

myEmacs :: String
myEmacs = "emacsclient -c -a 'emacs' "  -- Makes emacs keybindings easier to type

myEditor :: String
myEditor = "emacsclient -c -a 'emacs' "  -- Sets emacs as editor
-- myEditor = myTerminal ++ " -e vim "    -- Sets vim as editor

myBorderWidth :: Dimension
myBorderWidth = 2           -- Sets border width for windows
#+end_src

#+begin_src haskell
myStartupHook :: X ()
myStartupHook = do
  spawnOnce "picom"
  spawnOnce "nm-applet"
  spawnOnce "volumeicon"
  spawn "/usr/bin/emacs --daemon"

  setWName LG3D
#+end_src

* MAIN
This is were all of this code actually gets ran
#+begin_src haskell
main :: IO ()
main = do

  xmonad $ addDescrKeys' ((mod4Mask, xK_F1), showKeybindings) myKeys $ ewmh $ docks $ def
    { manageHook         = myManageHook <+> manageDocks
       , modMask            = myModMask
    , terminal           = myTerminal
    , startupHook        = myStartupHook

#+end_src
