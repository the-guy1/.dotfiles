#+title: Readme
#+AUTHOR: Kenneth Lawson
#+PROPERTY: header-args :tangle config
#+STARTUP: showeverything

* Table of Contents :toc:
- [[#description][Description]]
- [[#screenshots][Screenshots]]
- [[#configuration-files][Configuration Files]]
  - [[#setting-mod-key][Setting mod key]]
  - [[#general-setup][General setup]]
  - [[#font][Font]]
  - [[#floating-windows][Floating Windows]]
  - [[#key-keyboard-shortcuts][Key keyboard shortcuts]]
  - [[#sound][Sound]]
  - [[#brightness-controls][Brightness controls]]
  - [[#setup-workspaces-and-to-name-them][setup Workspaces and to name them]]
  - [[#startup-applications][Startup Applications]]
  - [[#bar][bar]]
  - [[#theme][Theme]]
  - [[#gaps][gaps]]

* Description
This is my i3 file I which is a Window Manager that I enjoy. Its customisable while being sturdy.
* Screenshots

* Configuration Files

** Setting mod key
#+begin_src conf
# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4
#+end_src

** General setup
These are some of base configs for i3
#+begin_src conf
# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
default_floating_border normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

#+end_src
*** disable titlebar
disable the built in titlebar
#+begin_src conf
new_window none
#+end_src
** Font
This set the main font that gets used for i3 and its bar
#+begin_src conf
font xft: Hack Nerd Font 11

#+end_src

** Floating Windows
If you use a lot of floating windows this will allow you to move the window with your mouse
#+begin_src conf
# Use Mouse+$mod to drag floating windows
floating_modifier $mod

#+end_src

** Key keyboard shortcuts
*** Terminal
Set my terminal
#+begin_src conf
# start my terminal
bindsym $mod+Return exec kitty
#+end_src
*** Kill the Window
To close the active application
#+begin_src conf
# kill focused window
bindsym $mod+Shift+q kill
#+end_src
*** Launchers

**** Dmenu
open my menu
#+begin_src conf
# start program launcher
bindsym $mod+d exec --no-startup-id "dmenu_run "
# bindsym $mod+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"

#+end_src
**** Emacs
open emacs launcher
#+begin_src conf
bindsym $mod+Shift+d exec --no-startup-id emacsclient -cF "((visibility . nul))" -e "(emacs-run-launcher)"
#+end_src
*** Change and modify focus of windows
Move around my windows
#+begin_src conf
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# focus_follows_mouse no

#+end_src
*** Fullscreen
Toggle fullscreen
#+begin_src conf
# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

#+end_src
*** Launch Emacs
Keyboard shortcut to launch Emacs
#+begin_src conf
# Launch emacs client
bindsym $mod+e exec emacsclient -c -a 'emacs'

#+end_src
*** Change layouts
#+begin_src conf
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
#bindsym $mod+Shift+s layout toggle split

#+end_src
*** Floating
Setup floating
#+begin_src conf
# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

#+end_src
*** Scratchpad
Scratchpads are amazing
#+begin_src conf
# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#+end_src
*** Workspace
#+begin_src conf
#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

#+end_src
*** Other keyboard shortcuts
Smaller shortcuts that I don't use that often but are glad that they are there
#+begin_src conf
# Start Applications
# bindsym $mod+Ctrl+b exec terminal -e 'bmenu'
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec pcmanfm
# bindsym $mod+F3 exec ranger
bindsym $mod+Shift+F3 exec pcmanfm_pkexec
bindsym $mod+F5 exec terminal -e 'mocp'
bindsym $mod+t exec --no-startup-id pkill picom
bindsym $mod+Ctrl+t exec --no-startup-id picom -b
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

#+end_src
*** Tiling toggle
i3 is a manual tiling window manager however I use a program that makes it an auto tiler but I keep this just in case I remove it.
#+begin_src conf
# split orientation
# bindsym $mod+z split h;exec notify-send 'tile horizontally'
# bindsym $mod+v split v;exec notify-send 'tile vertically'
# bindsym $mod+q split toggle;exec notify-send 'tile toggled'

#+end_src
*** Shortcuts that I don't know what they do
However I will not remove just in case they are important
#+begin_src conf
# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

#+end_src
*** Reload, Restart, and exit i3
To exit or reload my i3 config
#+begin_src conf
# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

#+end_src
*** Shutdown and logout scripts
This is a script that I took from the [[https://manjaro.org/download/][Manjaro i3]] config and have been using ever since
#+begin_src conf
# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id betterlockscreen -l
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    # bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#+end_src
*** Resize
This will resize windows
#+begin_src conf
# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#+end_src
*** Toggle i3status bar
Switch the status bar on and off
#+begin_src conf
# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

#+end_src

** Sound
#+begin_src conf
################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

#exec --no-startup-id volumeicon
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
bindsym $mod+Ctrl+m exec pavucontrol

#+end_src

** Brightness controls
I do not currently use this however I keep it in just in case I will in the future
#+begin_src conf
# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

#+end_src

** setup Workspaces and to name them
This will setup the 8 workspace as well as navigating around them
#+begin_src conf
# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

#+end_src
*** Start applications in floating mode
#+begin_src conf
  # Open specific applications in floating mode
  for_window [title="alsamixer"] floating enable border pixel 1
  for_window [class="calamares"] floating enable border normal
  for_window [class="Clipgrab"] floating enable
  for_window [title="File Transfer*"] floating enable
  for_window [class="fpakman"] floating enable
  for_window [class="Galculator"] floating enable border pixel 1
  for_window [class="GParted"] floating enable border normal
  for_window [title="i3_help"] floating enable sticky enable border normal
  for_window [class="Lightdm-settings"] floating enable
  for_window [class="Lxappearance"] floating enable sticky enable border normal
  for_window [title="MuseScore: Play Panel"] floating enable
  for_window [class="Nitrogen"] floating enable sticky enable border normal
  for_window [class="Oblogout"] fullscreen enable
  for_window [class="octopi"] floating enable
  for_window [title="About Pale Moon"] floating enable
  for_window [class="Pamac-manager"] floating enable
  for_window [class="Pavucontrol"] floating enable
  for_window [class="qt5ct"] floating enable sticky enable border normal
  for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
  for_window [class="Simple-scan"] floating enable border normal
  for_window [class="(?i)System-config-printer.py"] floating enable border normal
  for_window [class="Skype"] floating enable border normal
  for_window [class="Timeset-gui"] floating enable border normal
  for_window [class="(?i)virtualbox"] floating enable border normal
  for_window [class="Xfburn"] floating enable
  for_window [title="emacs-run-launcher"] floating enable

#+end_src
*** open applications in specific workspaces
Will actually set this up
#+begin_src conf
# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
# assign [class="Pale moon"] $ws2
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5
assign [class="Steam"] 6

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

#+end_src

** Startup Applications
These are the applications that will automatically launch
#+begin_src conf
# Autostart applications

# This is for when I have my external monitor attached
# exec --no-startup-id .screenlayout/ExtMonRight.sh

# emacs daemon
exec --no-startup-id /usr/bin/emacs --daemon
exec --no-startup-id nm-applet
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id feh --bg-scale ~/.dotfiles/.config/wallpaper/watercolor.jpg
exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
exec --no-startup-id clipit
exec --no-startup-id blueman-applet
exec --no-startup-id xautolock -time 10 -locker "betterlockscreen -l"
# exec --no-startup-id /home/ken/.config/polybar/launch.sh

exec --no-startup-id /opt/piavpn/bin/pia-client
exec --no-startup-id dropbox
exec --no-startup-id picom
exec --no-startup-id caffeine
exec --no-startup-id i3-battery-popup
exec --no-startup-id redshift
exec --no-startup-id solaar -w hide

# Autotiling
exec --no-startup-id autotiling

#+end_src

** bar
*** bumblebee
The [[https://github.com/tobi-wan-kenobi/bumblebee-status][bumblebee-status]] I use the AUR config is what I use for my bar
#+begin_src conf
bar {
    status_command /usr/share/bumblebee-status/bumblebee-status -m cpu memory spotify battery datetime \
    pasink -p time.format="%H:%M" -t iceberg-contrast #greyish-powerline
#   position top
}

#+end_src

** Theme
This is the [[https://github.com/catppuccin/catppuccin][Catppuccin theme]]
#+begin_src conf
set $rosewater #f5e0dc
set $flamingo  #f2cdcd
set $pink      #f5c2e7
set $mauve     #cba6f7
set $red       #f38ba8
set $maroon    #eba0ac
set $peach     #fab387
set $green     #a6e3a1
set $teal      #94e2d5
set $sky       #89dceb
set $sapphire  #74c7ec
set $blue      #89b4fa
set $lavender  #b4befe
set $text      #cdd6f4
set $subtext1  #bac2de
set $subtext0  #a6adc8
set $overlay2  #9399b2
set $overlay1  #7f849c
set $overlay0  #6c7086
set $surface2  #585b70
set $surface1  #45475a
set $surface0  #313244
set $base      #1e1e2e
set $mantle    #181825
set $crust     #11111b

# target                 title     bg    text   indicator  border
client.focused           $pink     $base $text  $rosewater $pink
client.focused_inactive  $mauve    $base $text  $rosewater $mauve
client.unfocused         $mauve    $base $text  $rosewater $mauve
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

#+end_src
** gaps
For using gaps to help to separate windows
#+begin_src conf
# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#+end_src
